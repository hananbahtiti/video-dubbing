# -*- coding: utf-8 -*-
"""video

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yk950ToSSF5VHJCZu9rrRQ34VwU6zCPq
"""

import yt_dlp
import os
from moviepy.editor import VideoFileClip


class Videos:
    def __init__(self, URL=None, file_video=None):
        self.URL = URL
        self.file_video = file_video

    def download_video(self, URL, save_path='/content/videos'):
        if not os.path.exists(save_path):
          os.makedirs(save_path)

        # Configure yt-dlp options
        ydl_opts = {
          "outtmpl": os.path.join(save_path, '%(id)s.%(ext)s'),
          "format": "best",
          "use-extractors": "all",
          "writesubtitles": False,
          "writeautomaticsub": False,
          # to suppress ffmpeg's stdout output
          "quiet": True,
          }

        try:
          # Create a yt-dlp object and download the video
          with yt_dlp.YoutubeDL(ydl_opts) as ydl:
              info = ydl.extract_info(URL, download=True)
              filename = ydl.prepare_filename(info)
              return filename

        except Exception as e:
              print(f"Error downloading video: {str(e)}")
              return None



    def separate_video_audio(self, folder_separate= '/content/separate/' ):
      # Check if a video file path is provided or URL is available
        if self.file_video:
            file_video = self.file_video
        elif self.URL:
            # Download video if URL is provided
            file_video = self.download_video(self.URL)
            if not file_video:
                print("Failed to download video.")
                return
        else:
            print("No video file or URL provided.")
            return

        if not os.path.exists(folder_separate):
           os.makedirs(folder_separate)

      # Load the video file
        try:
            filename, file_extension = os.path.splitext(file_video.split('/')[-1])

            #filename = file_video.split('/')[-1]
            file_video_only = f"{folder_separate}{filename}.mp4"
            file_audio = f"{folder_separate}{filename}.mp3"

            video = VideoFileClip(file_video)
            print("Video file loaded successfully.")
        except Exception as e:
            print(f"Error loading video file: {e}")
            video = None

        if video:
            # Extract audio if available
            if video.audio:
                audio = video.audio
                try:
                    # Save the audio file
                    audio.write_audiofile(file_audio)
                    print("Audio file extracted and saved successfully.")
                except Exception as e:
                    print(f"Error saving audio file: {e}")
            else:
                print("The video does not contain an audio track.")

            try:
                # Save the video without audio
                video_no_audio = video.without_audio()
                video_no_audio.write_videofile(file_video_only, audio=False)
                print("Video saved without audio successfully.")
            except Exception as e:
                print(f"Error saving video without audio: {e}")



